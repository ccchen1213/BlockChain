{"ast":null,"code":"var _jsxFileName = \"D:\\\\IDEA\\\\BlockChain\\\\myapp\\\\src\\\\components\\\\apply\\\\problem\\\\FlowChart.js\";\nimport React, { Component } from 'react'; //import '../claimprogress/Progress.css';\n\nimport arrowUrl from '../../../image/arrow.png';\nexport default class FlowChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stepData: [{\n        title: '申请已提交',\n        imgUrl: require('../../../image/send.png')\n      }, {\n        title: '审核中',\n        imgUrl: require('../../../image/checking.png')\n      }, {\n        title: '资料核验',\n        imgUrl: require('../../../image/apply.png')\n      }, {\n        title: '审核通过',\n        imgUrl: require('../../../image/passed.png')\n      }, {\n        title: '理赔金已发放',\n        imgUrl: require('../../../image/money.png')\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"y-prog-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(ClaimProgressComponentStepList, {\n      data: this.state.stepData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"y-prog-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n} // 整条步骤\n\nfunction ClaimProgressComponentStepList(props) {\n  //console.log(props);\n  let data = props.data; //console.log(data)\n\n  const ClaimProgressComponentRow = () => {\n    let res = [];\n    data.forEach((value, index) => {\n      res.push(React.createElement(ClaimProgressComponentStep, {\n        data: value,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n      if (index + 1 !== data.length) res.push(React.createElement(\"div\", {\n        className: \"y-prog-arrow\",\n        key: Math.random(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: arrowUrl,\n        alt: \"arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    });\n    return res;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"y-prog-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, ClaimProgressComponentRow());\n} // 各个步骤\n\n\nfunction ClaimProgressComponentStep(props) {\n  let data = props.data;\n  return React.createElement(\"div\", {\n    className: \"y-prog-step\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"y-prog-stepimg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: data.imgUrl,\n    alt: data.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"y-prog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, data.title));\n}","map":{"version":3,"sources":["D:/IDEA/BlockChain/myapp/src/components/apply/problem/FlowChart.js"],"names":["React","Component","arrowUrl","FlowChart","state","stepData","title","imgUrl","require","render","ClaimProgressComponentStepList","props","data","ClaimProgressComponentRow","res","forEach","value","index","push","length","Math","random","ClaimProgressComponentStep"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//import '../claimprogress/Progress.css';\r\nimport arrowUrl from '../../../image/arrow.png';\r\n\r\nexport default class FlowChart extends Component {\r\n  state = {\r\n    stepData: [\r\n      { title: '申请已提交', imgUrl: require('../../../image/send.png') },\r\n      { title: '审核中', imgUrl: require('../../../image/checking.png') },\r\n      { title: '资料核验', imgUrl: require('../../../image/apply.png') },\r\n      { title: '审核通过', imgUrl: require('../../../image/passed.png') },\r\n      { title: '理赔金已发放', imgUrl: require('../../../image/money.png') },\r\n    ]\r\n  };\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className='y-prog-container'>\r\n        <ClaimProgressComponentStepList data={this.state.stepData} />\r\n        <div className='y-prog-footer'>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// 整条步骤\r\nfunction ClaimProgressComponentStepList(props) {\r\n  //console.log(props);\r\n  let { data } = props;\r\n  //console.log(data)\r\n  \r\n  const ClaimProgressComponentRow = () => {\r\n    let res = [];\r\n    data.forEach((value, index) => {\r\n      res.push(<ClaimProgressComponentStep data={value} key={index} />)\r\n      if (index + 1 !== data.length) res.push(\r\n        <div className='y-prog-arrow' key={Math.random()}>\r\n          <img src={arrowUrl} alt='arrow' />\r\n        </div>\r\n      )\r\n    });\r\n    return res\r\n  };\r\n\r\n  return (\r\n    <div className='y-prog-main'>\r\n      {ClaimProgressComponentRow()}\r\n    </div>\r\n  )\r\n}\r\n// 各个步骤\r\nfunction ClaimProgressComponentStep(props) {\r\n  let { data } = props;\r\n  return (\r\n    <div className='y-prog-step'>\r\n      <div className='y-prog-stepimg'>\r\n        <img src={data.imgUrl} alt={data.title} />\r\n      </div>\r\n      <p className='y-prog-title'>{data.title}</p>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}