{"ast":null,"code":"var _jsxFileName = \"D:\\\\IDEA\\\\BlockChain\\\\myapp\\\\src\\\\components\\\\login\\\\LoginForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './LoginForm.css';\nimport { Form, Icon, Input, Button, Checkbox, Radio } from 'antd';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      console.log('radio checked', e.target.value);\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.state = {\n      userName: \"\",\n      userPassword: \"\",\n      value: 1\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Login in\"), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      name: \"Username\",\n      id: \"uname\",\n      ref: \"uname\",\n      onChange: this.changeUsername.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"Password\",\n      id: \"upwd\",\n      ref: \"upwd\",\n      onChange: this.changePassword.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Radio.Group, {\n      className: \"idType\",\n      onChange: this.onChange,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\u6295\\u4FDD\\u4EBA\"), React.createElement(Radio, {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"\\u4FDD\\u9669\\u4EBA\"), React.createElement(Radio, {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\u7EF4\\u4FEE\\u5546\")), getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      className: \"check\",\n      id: \"chk\",\n      checked: this.state.isRemember,\n      onClick: this.handleCheckbox.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(\"span\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" Or \", React.createElement(Link, {\n      to: \"/Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"register now!\"))));\n  }\n\n}\n\nexport default Form.create()(LoginForm);","map":{"version":3,"sources":["D:/IDEA/BlockChain/myapp/src/components/login/LoginForm.js"],"names":["React","Component","Link","Form","Icon","Input","Button","Checkbox","Radio","LoginForm","constructor","props","onChange","e","console","log","target","value","setState","handleSubmit","preventDefault","form","validateFields","err","values","state","userName","userPassword","render","getFieldDecorator","rules","required","message","color","changeUsername","bind","changePassword","valuePropName","initialValue","isRemember","handleCheckbox","create"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,oBAAP;AACA,OAAO,iBAAP;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,KAA9C,QAA2D,MAA3D;;AAEA,MAAMC,SAAN,SAAwBT,KAAK,CAACC,SAA9B,CAAwC;AACpCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAYlBC,QAZkB,GAYPC,CAAC,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,CAAC,CAACG,MAAF,CAASC,KAAtC;AACA,WAAKC,QAAL,CAAc;AACVD,QAAAA,KAAK,EAAEJ,CAAC,CAACG,MAAF,CAASC;AADN,OAAd;AAGH,KAjBiB;;AAAA,SAmBlBE,YAnBkB,GAmBHN,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACO,cAAF;AACA,WAAKT,KAAL,CAAWU,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACNT,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCS,MAAzC;AACH;AACJ,OAJD;AAKH,KA1BiB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,YAAY,EAAE,EAFL;AAGTV,MAAAA,KAAK,EAAE;AAHE,KAAb;AAMH;;AAoBDW,EAAAA,MAAM,GAAG;AAAA,UACGC,iBADH,GACyB,KAAKlB,KAAL,CAAWU,IADpC,CACGQ,iBADH;AAEL,WAEI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKV,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKU,iBAAiB,CAAC,UAAD,EAAa;AAC3BC,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADoB,KAAb,CAAjB,CAGG,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ;AAEI,MAAA,WAAW,EAAC,UAFhB;AAGI,MAAA,IAAI,EAAE,UAHV;AAII,MAAA,EAAE,EAAE,OAJR;AAKI,MAAA,GAAG,EAAE,OALT;AAMI,MAAA,QAAQ,EAAE,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADL,CAFJ,EAgBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,iBAAiB,CAAC,UAAD,EAAa;AAC3BC,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD;AADoB,KAAb,CAAjB,CAGG,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,IAAI,EAAE,UAJV;AAKI,MAAA,EAAE,EAAE,MALR;AAMI,MAAA,GAAG,EAAE,MANT;AAOI,MAAA,QAAQ,EAAE,KAAKG,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADL,CAhBJ,EA+BI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,SAAS,EAAE,QAAxB;AAAkC,MAAA,QAAQ,EAAE,KAAKvB,QAAjD;AAA2D,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWR,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,CADJ,EAMKY,iBAAiB,CAAC,UAAD,EAAa;AAC3BQ,MAAAA,aAAa,EAAE,SADY;AAE3BC,MAAAA,YAAY,EAAE;AAFa,KAAb,CAAjB,CAGE,oBAAC,QAAD;AACC,MAAA,SAAS,EAAE,OADZ;AAEC,MAAA,EAAE,EAAE,KAFL;AAGC,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWc,UAHrB;AAIC,MAAA,OAAO,EAAE,KAAKC,cAAL,CAAoBL,IAApB,CAAyB,IAAzB,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CANL,EAgBI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,SAAS,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,EAmBI;AAAM,MAAA,SAAS,EAAE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAjC,CAnBJ,CA/BJ,CAFJ;AAwDH;;AAvFmC;;AA2FxC,eAAehC,IAAI,CAACsC,MAAL,GAAchC,SAAd,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './LoginForm.css';\r\nimport { Form, Icon, Input, Button, Checkbox, Radio } from 'antd';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            userPassword: \"\",\r\n            value: 1,\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n    onChange = e => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <p className={\"login\"}>Login in</p>\r\n                <Form.Item>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Username\"\r\n                            name={\"Username\"}\r\n                            id={\"uname\"}\r\n                            ref={\"uname\"}\r\n                            onChange={this.changeUsername.bind(this)}\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name={\"Password\"}\r\n                            id={\"upwd\"}\r\n                            ref={\"upwd\"}\r\n                            onChange={this.changePassword.bind(this)}\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Radio.Group className={\"idType\"} onChange={this.onChange} value={this.state.value}>\r\n                        <Radio value={1}>投保人</Radio>\r\n                        <Radio value={2}>保险人</Radio>\r\n                        <Radio value={3}>维修商</Radio>\r\n                    </Radio.Group>\r\n                    {getFieldDecorator('remember', {\r\n                        valuePropName: 'checked',\r\n                        initialValue: true,\r\n                    })(<Checkbox\r\n                        className={\"check\"}\r\n                        id={\"chk\"}\r\n                        checked={this.state.isRemember}\r\n                        onClick={this.handleCheckbox.bind(this)}\r\n                    >Remember me</Checkbox>)}\r\n\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                    <span className={\"register\"}> Or <Link to=\"/Register\">register now!</Link></span>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Form.create()(LoginForm);"]},"metadata":{},"sourceType":"module"}