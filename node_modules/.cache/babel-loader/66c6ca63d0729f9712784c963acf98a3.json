{"ast":null,"code":"var _jsxFileName = \"D:\\\\IDEA\\\\BlockChain\\\\myapp\\\\src\\\\components\\\\apply\\\\apply\\\\ApplyForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Button, Radio, Icon } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport Menus from \"../Menus\";\n\nclass ApplyForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      formLayout: 'horizontal'\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      className: \"register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"WELCOME TO JOIN US\"), React.createElement(Form.Item, {\n      label: \"\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, getFieldDecorator('usr', {\n      rules: [{\n        required: true,\n        message: '请输入您的用户名'\n      }, {\n        min: 5,\n        max: 10,\n        message: '用户名为5-10位字符'\n      }, {\n        pattern: new RegExp('^\\\\w{5,10}$', 'g'),\n        message: '用户名必须为字母或者数字'\n      }]\n    })(React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u90AE\\u7BB1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: '邮箱格式不正确'\n      }, {\n        required: true,\n        message: '请输入您的邮箱'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"请输入您的邮箱\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u5BC6\\u7801\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, getFieldDecorator('pwd', {\n      rules: [{\n        required: true,\n        message: '请输入您的密码'\n      }, {\n        min: 6,\n        max: 15,\n        message: '密码为6-15位字符'\n      }, {\n        pattern: new RegExp('^\\\\w{6,15}$', 'g'),\n        message: '用户名必须为字母或者数字'\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })(React.createElement(Input.Password, {\n      placeholder: \"请输入您的密码\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, getFieldDecorator('rpwd', {\n      rules: [{\n        required: true,\n        message: '请再次输入您的密码'\n      }, {\n        validator: this.compareToFirstPassword,\n        message: '两次密码不一致'\n      }]\n    })(React.createElement(Input.Password, {\n      onBlur: this.handleConfirmBlur,\n      placeholder: \"请再次输入您的密码\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u771F\\u5B9E\\u59D3\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, getFieldDecorator('realname', {\n      rules: [{\n        required: true,\n        message: '请输入您的真实姓名'\n      }, {\n        pattern: new RegExp('^[\\u4e00-\\u9fa5]+$', 'g'),\n        message: '真实姓名有误'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"请输入您的真实姓名\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u624B\\u673A\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, getFieldDecorator('phone', {\n      rules: [{\n        required: true,\n        message: '请输入您的手机号'\n      }, {\n        pattern: new RegExp('^1[3456789]\\\\d{9}$', 'g'),\n        message: '用户名必须为字母或者数字'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"请输入您的手机号\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, getFieldDecorator('IDcard', {\n      rules: [{\n        required: true,\n        message: '请输入您的身份证号'\n      }, {\n        pattern: new RegExp('^[1-9]\\\\d{5}(18|19|20)\\\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\\\d{3}[0-9Xx]$', 'g'),\n        message: '身份证号有误'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"请输入您的身份证号\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"\\u8F66\\u724C\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, getFieldDecorator('carnum', {\n      rules: [{\n        required: true,\n        message: '请输入您的车牌号'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"请输入您的车牌号\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n}\n\nexport default ApplyForm;","map":{"version":3,"sources":["D:/IDEA/BlockChain/myapp/src/components/apply/apply/ApplyForm.js"],"names":["React","Component","Form","Input","Button","Radio","Icon","Link","Menus","ApplyForm","constructor","state","formLayout","render","getFieldDecorator","props","form","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","handleSubmit","rules","required","message","min","max","pattern","RegExp","type","validator","validateToNextPassword","compareToFirstPassword","handleConfirmBlur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Form, Input, Button, Radio, Icon} from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport Menus from \"../Menus\";\r\n\r\nclass ApplyForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            formLayout: 'horizontal',\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 5 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <Form {...formItemLayout}\r\n                  onSubmit={this.handleSubmit}\r\n                  className=\"register-form\">\r\n                <h2 className={\"Register\"}>WELCOME TO JOIN US</h2>\r\n                <Form.Item label=\"用户名\">\r\n                    {getFieldDecorator('usr', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入您的用户名'\r\n                            },\r\n                            {\r\n                                min:5,max:10,\r\n                                message:'用户名为5-10位字符'\r\n                            },\r\n                            {\r\n                                pattern:new RegExp('^\\\\w{5,10}$','g'),\r\n                                message:'用户名必须为字母或者数字'\r\n                            }\r\n                        ],\r\n                    })(\r\n                        <Input type=\"text\" placeholder=\"请输入用户名\"/>,\r\n                    )}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"邮箱\">\r\n                    {getFieldDecorator('email', {\r\n                        rules: [\r\n                            {\r\n                                type: 'email',\r\n                                message: '邮箱格式不正确',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: '请输入您的邮箱',\r\n                            },\r\n                        ],\r\n                    })(<Input placeholder={\"请输入您的邮箱\"}/>)}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"密码\" hasFeedback>\r\n                    {getFieldDecorator('pwd', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入您的密码',\r\n                            },\r\n                            {\r\n                                min:6,max:15,\r\n                                message:'密码为6-15位字符'\r\n                            },\r\n                            {\r\n                                pattern:new RegExp('^\\\\w{6,15}$','g'),\r\n                                message:'用户名必须为字母或者数字'\r\n                            },\r\n                            {\r\n                                validator: this.validateToNextPassword,\r\n                            },\r\n                        ],\r\n                    })(<Input.Password placeholder={\"请输入您的密码\"}/>)}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"确认密码\" hasFeedback>\r\n                    {getFieldDecorator('rpwd', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请再次输入您的密码',\r\n                            },\r\n                            {\r\n                                validator: this.compareToFirstPassword,\r\n                                message:'两次密码不一致'\r\n                            },\r\n                        ],\r\n                    })(<Input.Password onBlur={this.handleConfirmBlur} placeholder={\"请再次输入您的密码\"}/>)}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"真实姓名\">\r\n                    {getFieldDecorator('realname', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入您的真实姓名'\r\n                            },\r\n                            {\r\n                                pattern:new RegExp('^[\\u4e00-\\u9fa5]+$','g'),\r\n                                message:'真实姓名有误'\r\n                            }\r\n                        ],\r\n                    })(<Input placeholder={\"请输入您的真实姓名\"}/>)}\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item label=\"手机号\">\r\n                    {getFieldDecorator('phone', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入您的手机号'\r\n                            },\r\n                            {\r\n                                pattern:new RegExp('^1[3456789]\\\\d{9}$','g'),\r\n                                message:'用户名必须为字母或者数字'\r\n                            }\r\n                        ],\r\n                    })(<Input placeholder={\"请输入您的手机号\"}/>)}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"身份证号\">\r\n                    {getFieldDecorator('IDcard', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入您的身份证号'\r\n                            },\r\n                            {\r\n                                pattern:new RegExp('^[1-9]\\\\d{5}(18|19|20)\\\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\\\d{3}[0-9Xx]$','g'),\r\n                                message:'身份证号有误'\r\n                            }\r\n                        ],\r\n                    })(<Input placeholder={\"请输入您的身份证号\"}/>)}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"车牌号\">\r\n                    {getFieldDecorator('carnum', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入您的车牌号'\r\n                            }\r\n                        ],\r\n                    })(<Input placeholder={\"请输入您的车牌号\"}/>)}\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Register\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default ApplyForm;"]},"metadata":{},"sourceType":"module"}