{"ast":null,"code":"var _jsxFileName = \"D:\\\\IDEA\\\\BlockChain\\\\myapp\\\\src\\\\components\\\\login\\\\LoginForm.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './LoginForm.css';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Icon, Input, Button, Radio, message } from 'antd';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //连接后注释\n\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          axios.post('', {\n            values\n          }).then(res => {\n            console.log(res);\n\n            if (res.data.state === \"success\") {\n              this.setState({\n                loginFlag: true\n              });\n            } else {\n              this.setState({\n                loginFlag: false\n              });\n              message.error(res.data.msg);\n            }\n          }).catch(err => {\n            console.log(err);\n            this.setState({\n              loginFlag: false\n            });\n          });\n          console.log('Received values of form: ', values);\n        } //如果没有错误，则发送用户信息给后端\n        else {\n            message.error(\"输入信息有误！\");\n          }\n      });\n    };\n\n    this.state = {\n      loginFlag: false\n    };\n  } //登录按钮提交\n\n\n  render() {\n    if (this.state.loginFlag) {\n      return React.createElement(Redirect, {\n        to: \"/Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Login in\"), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: '请输入您的用户名!'\n      }, {\n        min: 5,\n        max: 10,\n        message: '用户名长度不在范围内'\n      }, {\n        pattern: new RegExp('^\\\\w+$', 'g'),\n        message: '用户名必须为字母或者数字'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }),\n      type: \"text\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: '请输入您的密码!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, getFieldDecorator('root', {\n      initialValue: 1\n    })(React.createElement(Radio.Group, {\n      className: \"idType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\u6295\\u4FDD\\u4EBA\"), React.createElement(Radio, {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\u4FDD\\u9669\\u4EBA\"), React.createElement(Radio, {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\u7EF4\\u4FEE\\u5546\"))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(\"span\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" Or \", React.createElement(Link, {\n      to: \"/Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"register now!\"))));\n  }\n\n}\n\nexport default Form.create()(LoginForm);","map":{"version":3,"sources":["D:/IDEA/BlockChain/myapp/src/components/login/LoginForm.js"],"names":["React","Link","axios","Redirect","Form","Icon","Input","Button","Radio","message","LoginForm","Component","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","post","then","res","console","log","data","state","setState","loginFlag","error","msg","catch","render","getFieldDecorator","initialValue","rules","required","min","max","pattern","RegExp","color","create"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './LoginForm.css';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Form, Icon, Input, Button, Radio, message} from 'antd';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loginFlag:false\r\n        };\r\n    }\r\n\r\n    //登录按钮提交\r\n    handleSubmit = e => {\r\n        e.preventDefault();//连接后注释\r\n\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                axios.post('', {values})\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        if(res.data.state === \"success\"){\r\n                            this.setState({loginFlag:true})\r\n                        }\r\n                        else{\r\n                            this.setState({loginFlag:false});\r\n                            message.error(res.data.msg);\r\n\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                            loginFlag:false\r\n                        })\r\n                    });\r\n                console.log('Received values of form: ', values);\r\n            }\r\n            //如果没有错误，则发送用户信息给后端\r\n            else{\r\n                message.error(\"输入信息有误！\");\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if(this.state.loginFlag){\r\n            return <Redirect to=\"/Home\"/>\r\n        }\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <p className={\"login\"}>Login in</p>\r\n                <Form.Item>\r\n                    {getFieldDecorator('username', {\r\n                        initialValue:'',\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入您的用户名!'\r\n                            },\r\n                            {\r\n                                min:5,max:10,\r\n                                message:'用户名长度不在范围内'\r\n                            },\r\n                            {\r\n                                pattern:new RegExp('^\\\\w+$','g'),\r\n                                message:'用户名必须为字母或者数字'\r\n                            }\r\n                        ],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"text\"\r\n                            placeholder=\"请输入用户名\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        initialValue:'',\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入您的密码!'\r\n                            }\r\n                        ],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"请输入密码\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('root', {\r\n                        initialValue:1,\r\n                    })(<Radio.Group className={\"idType\"}>\r\n                        <Radio value={1}>投保人</Radio>\r\n                        <Radio value={2}>保险人</Radio>\r\n                        <Radio value={3}>维修商</Radio>\r\n                    </Radio.Group>)}\r\n\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                    <span className={\"register\"}> Or <Link to=\"/Register\">register now!</Link></span>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Form.create()(LoginForm);"]},"metadata":{},"sourceType":"module"}