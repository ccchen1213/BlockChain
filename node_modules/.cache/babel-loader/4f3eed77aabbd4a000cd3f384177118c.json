{"ast":null,"code":"var _jsxFileName = \"D:\\\\IDEA\\\\BlockChain\\\\myapp\\\\src\\\\components\\\\apply\\\\apply\\\\ApplyForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Button, Radio, Icon } from 'antd';\nimport { Row, Col } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport Menus from \"../Menus\";\n\nclass ApplyForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {// labelCol: {\n      //     xs: { span: 24},\n      //     sm: { span: 5},\n      //\n      // },\n      // wrapperCol: {\n      //     xs: { span: 24},\n      //     sm: { span: 16},\n      // },\n    };\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      layout: 'inline',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"register now!\")));\n  }\n\n}\n\nexport default Form.create()(ApplyForm);","map":{"version":3,"sources":["D:/IDEA/BlockChain/myapp/src/components/apply/apply/ApplyForm.js"],"names":["React","Component","Form","Input","Button","Radio","Icon","Row","Col","Link","Menus","ApplyForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","render","getFieldDecorator","formItemLayout","rules","required","message","color","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Form, Input, Button, Radio, Icon} from 'antd';\r\nimport { Row, Col } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport Menus from \"../Menus\";\r\n\r\nclass ApplyForm extends React.Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            // labelCol: {\r\n            //     xs: { span: 24},\r\n            //     sm: { span: 5},\r\n            //\r\n            // },\r\n            // wrapperCol: {\r\n            //     xs: { span: 24},\r\n            //     sm: { span: 16},\r\n            // },\r\n        };\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} layout={'inline'}>\r\n                <Row>\r\n                    <Col span={12}>\r\n                    <Form.Item label=\"用户名\">\r\n                        {getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: 'Please input your username!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                    <Form.Item label=\"密码\">\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: 'Please input your Password!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                    Or <a href=\"\">register now!</a>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(ApplyForm);"]},"metadata":{},"sourceType":"module"}