{"ast":null,"code":"var _jsxFileName = \"D:\\\\IDEA\\\\BlockChain\\\\myapp\\\\src\\\\components\\\\login\\\\LoginForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './LoginForm.css';\nimport { Form, Icon, Input, Button, Checkbox, Radio } from 'antd';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: 1\n    };\n\n    this.onChange = e => {\n      console.log('radio checked', e.target.value);\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.handleCheck = e => {\n      let isChecked = e.target.checked;\n\n      if (isChecked) {\n        this.setState({\n          isRemember: true\n        });\n      } else {\n        this.setState({\n          isRemember: false\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      let userInfo = this.props.form.getFieldsValue();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values); //如果没有错误，则发送用户信息给后端\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Login in\"), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }, {\n        min: 5,\n        max: 10,\n        message: '用户名长度不在范围内'\n      }, {\n        pattern: new RegExp('^\\\\w+$', 'g'),\n        message: '用户名必须为字母或者数字'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      type: \"text\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Radio.Group, {\n      className: \"idType\",\n      onChange: this.onChange,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\u6295\\u4FDD\\u4EBA\"), React.createElement(Radio, {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\\u4FDD\\u9669\\u4EBA\"), React.createElement(Radio, {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\u7EF4\\u4FEE\\u5546\")), getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      className: \"check\",\n      id: \"chk\",\n      checked: this.state.isRemember,\n      onClick: this.handleCheck.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(\"span\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" Or \", React.createElement(Link, {\n      to: \"/Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"register now!\"))));\n  }\n\n}\n\nexport default Form.create()(LoginForm);","map":{"version":3,"sources":["D:/IDEA/BlockChain/myapp/src/components/login/LoginForm.js"],"names":["React","Component","Link","Form","Icon","Input","Button","Checkbox","Radio","LoginForm","state","value","onChange","e","console","log","target","setState","handleCheck","isChecked","checked","isRemember","handleSubmit","userInfo","props","form","getFieldsValue","validateFields","err","values","render","getFieldDecorator","initialValue","rules","required","message","min","max","pattern","RegExp","color","valuePropName","bind","create"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './LoginForm.css';\r\nimport { Form, Icon, Input, Button, Checkbox, Radio } from 'antd';\r\n\r\nclass LoginForm extends React.Component {\r\n    //用户种类初始状态\r\n    state = {\r\n        value: 1,\r\n    };\r\n\r\n    //用户种类改变\r\n    onChange = e => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    //记住用户选项\r\n    handleCheck = e => {\r\n        let isChecked = e.target.checked;\r\n        if(isChecked) {\r\n            this.setState({\r\n                isRemember: true\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                isRemember: false\r\n            })\r\n        }\r\n    };\r\n\r\n    //登录按钮提交\r\n    handleSubmit = e => {\r\n        let userInfo = this.props.form.getFieldsValue();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                //如果没有错误，则发送用户信息给后端\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <p className={\"login\"}>Login in</p>\r\n                <Form.Item>\r\n                    {getFieldDecorator('username', {\r\n                        initialValue:'',\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!'\r\n                            },\r\n                            {\r\n                                min:5,max:10,\r\n                                message:'用户名长度不在范围内'\r\n                            },\r\n                            {\r\n                                pattern:new RegExp('^\\\\w+$','g'),\r\n                                message:'用户名必须为字母或者数字'\r\n                            }\r\n                        ],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"text\"\r\n                            placeholder=\"请输入用户名\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        initialValue:'',\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Password!'\r\n                            }\r\n                        ],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"请输入密码\"/>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Radio.Group className={\"idType\"} onChange={this.onChange} value={this.state.value}>\r\n                        <Radio value={1}>投保人</Radio>\r\n                        <Radio value={2}>保险人</Radio>\r\n                        <Radio value={3}>维修商</Radio>\r\n                    </Radio.Group>\r\n                    {getFieldDecorator('remember', {\r\n                        valuePropName: 'checked',\r\n                        initialValue: true,\r\n                    })(\r\n                        <Checkbox\r\n                            className={\"check\"}\r\n                            id={\"chk\"}\r\n                            checked={this.state.isRemember}\r\n                            onClick={this.handleCheck.bind(this)}\r\n                        >Remember me</Checkbox>)}\r\n\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                    <span className={\"register\"}> Or <Link to=\"/Register\">register now!</Link></span>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Form.create()(LoginForm);"]},"metadata":{},"sourceType":"module"}