{"ast":null,"code":"var _jsxFileName = \"D:\\\\IDEA\\\\BlockChain\\\\myapp\\\\src\\\\components\\\\apply\\\\progress\\\\ProgressComponent.js\";\nimport React, { Component } from 'react';\nimport './Progress.css';\nimport arrowUrl from '../../../image/arrow.png';\nexport default class ProgressComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inWhatStep: 1,\n      stepData: [{\n        title: '申请已提交',\n        imgUrl: require('../../../image/send.png')\n      }, {\n        title: '审核中',\n        imgUrl: require('../../../image/checking.png')\n      }, {\n        title: '资料核验',\n        imgUrl: require('../../../image/apply.png')\n      }, {\n        title: '审核通过',\n        imgUrl: require('../../../image/passed.png')\n      }, {\n        title: '理赔金已发放',\n        imgUrl: require('../../../image/money.png')\n      }]\n    };\n  }\n\n  //组件渲染后使用\n  componentDidMount() {\n    let steps = document.getElementsByClassName('y-prog-step');\n\n    for (let i = 0; i < steps.length; i++) {\n      if (i + 1 > this.state.inWhatStep) steps[i].classList.add('y-dark');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"y-prog-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ClaimProgressComponentStepList, {\n      data: this.state.stepData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"y-prog-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"\\u4E00\\u3001\\u63D0\\u4EA4\\u7D22\\u8D54\\u6750\\u6599\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\u8BF7\\u6839\\u636E\\u6211\\u516C\\u53F8\\u4E66\\u9762\\u544A\\u77E5\\u60A8\\u7684\\u7D22\\u8D54\\u987B\\u77E5\\u5185\\u5BB9\\u63D0\\u4EA4\\u7D22\\u8D54\\u6240\\u9700\\u7684\\u5168\\u90E8\\u6750\\u6599\\uFF0C\\u6211\\u516C\\u53F8\\u53CA \\u65F6\\u5BF9\\u60A8\\u63D0\\u4EA4\\u7684\\u7D22\\u8D54\\u6750\\u6599\\u7684\\u771F\\u5B9E\\u6027\\u548C\\u5B8C\\u5907\\u6027\\u8FDB\\u884C\\u5BA1\\u6838\\u786E\\u8BA4\\uFF0C\\u7D22\\u8D54\\u6750\\u6599\\u4E0D\\u5B8C\\u6574\\u7684\\u60C5\\u51B5 \\u4E0B\\u6211\\u516C\\u53F8\\u5C06\\u53CA\\u65F6\\u901A\\u77E5\\u60A8\\u8865\\u5145\\u63D0\\u4F9B\\u6709\\u5173\\u6750\\u6599\\uFF0C\\u5BF9\\u7D22\\u8D54\\u6750\\u6599\\u771F\\u5B9E\\u6027\\u5B58\\u5728\\u7591\\u95EE\\u7684\\u60C5\\u51B5\\u4E0B \\u6211\\u516C\\u53F8\\u5C06\\u53CA\\u65F6\\u8FDB\\u884C\\u8C03\\u67E5\\u6838\\u5B9E\\u3002\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"\\u4E00\\u3001\\u8D54\\u6B3E\\u8BA1\\u7B97\\u548C\\u5BA1\\u6838\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"\\u5728\\u60A8\\u63D0\\u4EA4\\u7684\\u7D22\\u8D54\\u6750\\u6599\\u771F\\u5B9E\\u9F50\\u5168\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u6211\\u516C\\u53F8\\u6839\\u636E\\u4FDD\\u9669\\u5408\\u540C\\u7684\\u7EA6\\u5B9A\\u548C\\u76F8\\u5173\\u7684\\u6CD5\\u5F8B \\u6CD5\\u89C4\\u8FDB\\u884C\\u4FDD\\u9669\\u8D54\\u6B3E\\u7684\\u51C6\\u786E\\u8BA1\\u7B97\\u548C\\u8D54\\u6848\\u7684\\u5185\\u90E8\\u5BA1\\u6838\\u5DE5\\u4F5C\\uFF0C\\u5E76\\u4E0E\\u60A8\\u8FBE\\u6210\\u6700\\u7EC8\\u7684\\u8D54\\u507F\\u534F\\u8BAE\\u3002\")));\n  }\n\n} // 整条步骤\n\nfunction ClaimProgressComponentStepList(props) {\n  let data = props.data;\n\n  const ClaimProgressComponentRow = () => {\n    let res = [];\n    data.forEach((value, index) => {\n      res.push(React.createElement(ClaimProgressComponentStep, {\n        data: value,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n      if (index + 1 !== data.length) res.push(React.createElement(\"div\", {\n        className: \"y-prog-arrow\",\n        key: Math.random(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: arrowUrl,\n        alt: \"arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    });\n    return res;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"y-prog-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, ClaimProgressComponentRow());\n} // 各个步骤\n\n\nfunction ClaimProgressComponentStep(props) {\n  let data = props.data;\n  return React.createElement(\"div\", {\n    className: \"y-prog-step\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"y-prog-stepimg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: data.imgUrl,\n    alt: data.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"y-prog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, data.title));\n}","map":{"version":3,"sources":["D:/IDEA/BlockChain/myapp/src/components/apply/progress/ProgressComponent.js"],"names":["React","Component","arrowUrl","ProgressComponent","state","inWhatStep","stepData","title","imgUrl","require","componentDidMount","steps","document","getElementsByClassName","i","length","classList","add","render","ClaimProgressComponentStepList","props","data","ClaimProgressComponentRow","res","forEach","value","index","push","Math","random","ClaimProgressComponentStep"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './Progress.css';\r\nimport arrowUrl from '../../../image/arrow.png';\r\n\r\nexport default class ProgressComponent extends Component {\r\n\r\n  state = {\r\n    inWhatStep: 1,\r\n      stepData: [\r\n          { title: '申请已提交', imgUrl: require('../../../image/send.png') },\r\n          { title: '审核中', imgUrl: require('../../../image/checking.png') },\r\n          { title: '资料核验', imgUrl: require('../../../image/apply.png') },\r\n          { title: '审核通过', imgUrl: require('../../../image/passed.png') },\r\n          { title: '理赔金已发放', imgUrl: require('../../../image/money.png') },\r\n      ]\r\n  };\r\n\r\n  \r\n  //组件渲染后使用\r\n  componentDidMount() {\r\n    let steps = document.getElementsByClassName('y-prog-step')\r\n    for (let i=0; i<steps.length; i++) {\r\n      if (i + 1 > this.state.inWhatStep) steps[i].classList.add('y-dark')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='y-prog-container'>\r\n        <ClaimProgressComponentStepList data={this.state.stepData} />\r\n        <div className='y-prog-footer'>\r\n            <h3>一、提交索赔材料</h3>\r\n            <p>\r\n                请根据我公司书面告知您的索赔须知内容提交索赔所需的全部材料，我公司及\r\n                时对您提交的索赔材料的真实性和完备性进行审核确认，索赔材料不完整的情况\r\n                下我公司将及时通知您补充提供有关材料，对索赔材料真实性存在疑问的情况下\r\n                我公司将及时进行调查核实。\r\n            </p>\r\n\r\n            <h3>一、赔款计算和审核</h3>\r\n            <p>\r\n                在您提交的索赔材料真实齐全的情况下，我公司根据保险合同的约定和相关的法律\r\n                法规进行保险赔款的准确计算和赔案的内部审核工作，并与您达成最终的赔偿协议。\r\n            </p>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// 整条步骤\r\nfunction ClaimProgressComponentStepList(props) {\r\n\r\n  let { data } = props;\r\n  \r\n  const ClaimProgressComponentRow = () => {\r\n    let res = [];\r\n    data.forEach((value, index) => {\r\n      res.push(<ClaimProgressComponentStep data={value} key={index} />)\r\n      if (index + 1 !== data.length) res.push(\r\n        <div className='y-prog-arrow' key={Math.random()}>\r\n          <img src={arrowUrl} alt='arrow' />\r\n        </div>\r\n      )\r\n    });\r\n    return res\r\n  };\r\n\r\n  return (\r\n    <div className='y-prog-main'>\r\n      {ClaimProgressComponentRow()}\r\n    </div>\r\n  )\r\n}\r\n// 各个步骤\r\nfunction ClaimProgressComponentStep(props) {\r\n  let { data } = props;\r\n  return (\r\n    <div className='y-prog-step'>\r\n      <div className='y-prog-stepimg'>\r\n        <img src={data.imgUrl} alt={data.title} />\r\n      </div>\r\n      <p className='y-prog-title'>{data.title}</p>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}